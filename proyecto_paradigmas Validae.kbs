
redim puestosTrabajo$(1,4)
redim registroEmpleado$(1,5)
redim jornSemanal(1, 3)
call menu(puestosTrabajo$, registroEmpleado$, jornSemanal)


subroutine menu(puestos$, empleados$, jornada)

	cls
	print "---------------------->MENU<----------------------"
	print ""
	print"1) Crear puesto trabajo"
	print"2) Mostrar puesto trabajo"
	print"3) Registrar empleado"
	print "4) Mostrar empleados"
	print"5) Ingresar jornada semanal"
	print"6) Mostrar jornada semanal"
	print"7) Calcular y mostrar salario semanal"
	print "8) Asignar puesto de trabajo"
	print "9) Salir"
	print ""


	input "Opcion : ",opt$
	
	IF int(opt$) = 1 THEN call  crearPuestoTrabajo(puestos$, empleados$, jornada)
	IF int(opt$) = 2 THEN call  mostrarPuestoTrabajo(puestos$, empleados$, jornada)
	IF int(opt$) = 3 THEN call  registrarEmpleado(puestos$, empleados$, jornada)
	IF int(opt$) = 4 THEN call  mostrarEmpleados(puestos$, empleados$, jornada)
	IF int(opt$) = 5 THEN call  ingresarJornadas(puestos$, empleados$, jornada)
	IF int(opt$) = 6 THEN call mostrarTablaJornada(ref(jornada), puestos$, empleados$)
	IF int(opt$) = 7 THEN call salarioSemanal(puestos$, empleados$, ref(jornada))
	IF int(opt$) = 8 THEN call asignarPuestoMenu(puestos$, empleados$, ref(jornada))
	
	IF int(opt$) = 9 THEN 
		cls
		print"FIN DEL PROGRAMA"
	ENDIF
	IF int(opt$) = 0 THEN call menu(puestos$, empleados$, jornada)
		
end subroutine


subroutine crearPuestoTrabajo(puestos$, empleados$, jornada)
	cls
  	print "Crear puesto de trabajo"
  	print""
  	cantidad_filas=int((length(puestos$[]))/4)
  	redim puestos$(cantidad_filas+1,4)
	puestos$[cantidad_filas-1,0] = cantidad_filas
	puestos$[cantidad_filas-1,1]=validarTexto("Nombre del puesto:")
  	input "Descripcion:",puestos$[cantidad_filas-1,2]
  	puestos$[cantidad_filas-1,3]= validarNumeros("Costos Horas: ")
  	input" Digite 's' para asignar el puesto de trabajo a un empleado:  ", s$
  	IF s$ = "s" THEN call asignarPuesto( puestos$[cantidad_filas-1,0], puestos$, empleados$, jornada)
	cls
	call menu(puestos$, empleados$, jornada)
end subroutine


subroutine mostrarPuestoTrabajo(puestos$, empleados$, jornada)
	cls
	cantidad_filas=int((length(puestos$[]))/4)
	for y = 0 to cantidad_filas-2
 		print " Puesto ID:"+puestos$[y,0]
  		print "Nombre del puesto: "+puestos$[y,1]
  		print "Descripcion: "+puestos$[y,2]
  		print "Costo Horas:"+puestos$[y,3]
  		print " "
	next y
	do
		input "Para volver al menu digite 7 : ",opt$
		IF int(opt$) = 7 THEN call menu(puestos$, empleados$, jornada)
	until opt$ = 7
end subroutine


subroutine registrarEmpleado(puestos$, empleados$, jornada)
 	 print "Registrar un empleado"
	 print""
 	 cantidad_filas=int((length(empleados$[]))/5)
 	 redim empleados$(cantidad_filas+1,5)
	 cls
	 
  	 empleados$[cantidad_filas-1,0] = cantidad_filas
     empleados$[cantidad_filas-1,1]=validarTexto("Nombre completo:")
  	 empleados$[cantidad_filas-1,2]=validarCorreo()
     empleados$[cantidad_filas-1,3]=validarNumeros("Telefonos:")
     empleados$[cantidad_filas-1,4] = "no tiene"
	 call menu(puestos$, empleados$, jornada)
end subroutine


subroutine mostrarEmpleados(puestos$, empleados$, jornada)
	cls
	cantidad_filas= int((length(empleados$[]))/5)
	for y = 0 to cantidad_filas-2
 		print " Puesto ID:"+empleados$[y,0]
 		print "Nombre completo: "+empleados$[y,1]
  		print "Correo: "+empleados$[y,2]
  		print "Teléfono:"+empleados$[y,3]
  		print "ID_Puesto_trabajo:"+empleados$[y,4]
  		print " "
	next y
	do
		input "Para volver al menu digite 7 : ",opt$
		IF int(opt$) = 7 THEN call menu(puestos$, empleados$, jornada)
	until opt$ = 7
end subroutine


subroutine asignarPuestoMenu(puestos$, empleados$, jornada) 
	cls
	input "Digite el ID del puesto de trabajo", IdPuesto$
	if validarPuestoExiste(puestos$, IdPuesto$) then
		call asignarPuesto(IdPuesto$, puestos$, empleados$, jornada)
	else 
		cls
		input "EL PUESTO DE TRABAJO NO EXISTE (Presione cualquier tecla + ENTER para volver al menú)", i
		call menu(puestos$, empleados$, jornada)
	endif
end subroutine


subroutine asignarPuesto( IdPuesto$, puestos$, empleados$, jornada)

	cls
	input "Digite el ID del empleado que desea asignarle el puesto: ", id_empleado$	
	if validarEmpleadoExiste(empleados$,id_empleado$) then 		
		filasEmpleados=int((length(empleados$[]))/5)
		for  i = 0 to filasEmpleados-2
			if empleados$[i,0] = id_empleado$ then empleados$[i,4] = IdPuesto$	   
		next i
		call menu(puestos$, empleados$, jornada)
	else 
	cls
	input "EL USUARIO NO EXISTE (Presione cualquier tecla + ENTER para volver al menú)", i
	call menu(puestos$, empleados$, jornada)		   		
	endif
		
end subroutine


function validarEmpleadoExiste(empleados$, id_empleado$)
	filasEmpleados=int((length(empleados$[]))/5)
 	 for  i = 0 to filasEmpleados-2
		  if empleados$[i,0] = id_empleado$ then return true
   	 next i
	 return false
end function

function validarPuestoExiste(puestos$, IdPuesto$)

	filasPuesto=int((length(puestos$[]))/4)
	for  i = 0 to filasPuesto-2
		  if puestos$[i,0] = IdPuesto$ then return true
    next i
return false

end function


subroutine ingresarJornadas(puestos$,empleados$,list)
	cls
	print "********************************************"
	flag = true
	while flag
		input "Si desea salir precione la letra X y luego la tecla Enter, de lo contrario preciones letra distinta de X: ", a
		if  upper(a) = "X" then
			cls
			flag = false
			call menu(puestos$,empleados$,list)
		else 
			cls
			print "***************************************** "
			print "Ha seleccionado ingresar una jornada "
			print "***************************************** "
			
			input "Ingrese el dia al que desea ingresar una nueva jornada: ", dia
			if diaValido(dia) then 
			
				if diaDisponible(ref(list), dia) then
					horas=validarNumeros("Ingrese el numero de horas que son laborales este dia: ")
					if horas < 24 and int(horas) <> 0 then
						call agregarEntradaJornadas(ref(list), dia, horas)
						cls
						print "Jornada agregada"
					else
						cls
						print "***************************************** "
						print 'EL VALOR QUE HAS INGRESADO A LAS HORAS ERA DEMACIADO GRANDE'
						print "***************************************** "
					endif
				else
					cls
					print "***************************************** "
					print "Ya este dia esta ocupado, los dias que has ocupadon son: "
					call imprimirJornadasEnLista(ref(list))
				endif
			else
				cls
				print "***************************************** "
				print '"' + upper(dia)+ '"' + '  NO ES UN DIA VALIDO'
				print "***************************************** "
			end if
		end if
		print "********************************************"
	end while
end subroutine


subroutine agregarEntradaJornadas(list, dia, horas)
		cont = int(length(list)/3)
		dim editableAux(cont, 3)
		editableAux = list
		editableAux[cont - 1][0] = cont
		editableAux[cont - 1][1] = dia
		editableAux[cont - 1][2] = float(horas)
		redim editableAux(cont + 1, 3)
		list = editableAux
end subroutine


function diaValido(dia)
   return lower(dia) = 'lunes' or lower(dia) = 'martes' or lower(dia) = 'miercoles' or lower(dia) = 'jueves' or lower(dia) = 'viernes' or lower(dia) = 'sabado' or lower(dia) = 'domingo'
end function


function diaDisponible(list, dia)
	for i=0 to int(length(list)/3) - 2
		if lower(list [i][1]) = lower(dia) then
			return false
		endif
	next i
	return true
end function


subroutine imprimirJornadasEnLista(list)
	for i=0 to int(length(list)/3) - 2
		print list [i][1]
	next i
end subroutine


subroutine mostrarTablaJornada(list,puestos$,empleados$)
	cls
	print "****************Tabla de jornadas****************************"
	print "id-----dia-----horas--------------------------"
	for i=0 to int(length(list)/3) - 2
		print list [i][0] + "     " + list [i][1] + "     " + list[i][2]
	next i
	do
		input "Para volver al menu digite 7 : ",opt$
		IF int(opt$) = 7 THEN call menu(puestos$,empleados$,list)
	until opt$ = 7
end subroutine


subroutine salarioSemanal(puestos$,empleados$,jornada)
	cls
	total_horas = horasLaborales(jornada)
	if total_horas>0 then
		print "Total de horas laboradas: " + total_horas
		for j=0 to int(length(empleados$)/5) - 2
			if empleados$[j,4] <> "no tiene" then print "Nombre: "+empleados$[j,1] 
			if empleados$[j,4] <> "no tiene" then call salarioPorEmpleado(puestos$,empleados$[j,4],total_horas)
		next j
	else
	  print "Se deben de registrar las jornadas "
	end if
	do
		input "Para volver al menu digite 7 : ",opt$
		if int(opt$) = 7 THEN call menu(puestos$,empleados$,jornada)
	until opt$ = 7
end subroutine


subroutine salarioPorEmpleado(puestos$,IdPuesto$,total_horas)
	for k=0 to int(length(puestos$)/4) - 2
		salario = int(puestos$[k,3])*total_horas
		if puestos$[k,0] = IdPuesto$ then print "Salario: "+ salario	
	next k
		
end subroutine



function horasLaborales(jornada)
	total_horas = 0
	for i=0 to int(length(jornada)/3) - 2
		total_horas = total_horas + int(jornada[i][2])	
	next i
	return total_horas
end function 


function validarTexto(descripcion$)
	
	bandera=false
	palabra=""
	while  bandera <>true
  		Input descripcion$,palabra
   		if int(palabra)=0 then
       		bandera=true                        
   		else
   			print "Debe de ingresar un texto"
   		end if
 	end while
 	return palabra
end function

function validarCorreo()
bandera=false
	correo=""
	while  bandera <>true
  		Input "Correo: ",correo
   		if  instr(correo,"@")<>0  and instr(correo," ")=0  then
       		bandera=true                        
   		else
   		    if instr(correo,"@") =0 then
	   			print "El correo debe de tener  un (@) "
   			end if
   			if instr(correo," ")<>0 then
				print "El correo no debe de contener  (espacios) "   			
   			end if
   		end if
 	end while
 	return correo
end function

function validarNumeros(descripcion$)
	bandera=false
	 valor=0
	  while bandera <>true
	  	  input descripcion$,valor
		  if int(valor)<>0 then 
		  	 bandera=true
		  else
		  	print "Ingrese solo numeros"	  
		  end if
	 end while
	 return valor
end function